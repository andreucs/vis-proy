position <- c(4, 2, 2, 3, 1, 4, 2, 3, 1, 1, 4, 3)
player <- c("A", "A", "A",
"B", "E", "B",
"C", "C", "C",
"D", "D", "D")
df <- data.frame(x = year,
y = position,
group = player)
p <- ggplot(rank_top_5, aes(x = Year, y = Position, color = Prov)) +
geom_bump(size = 1.5) +
geom_point(aes(text = hover_info), size = 6) +
geom_text(data = rank_top_5 %>% filter(Year == min(Year)),
aes(x = Year - 0.1, label = Prov),
size = 5, hjust = 1) +
geom_text(data = rank_top_5 %>% filter(Year == max(Year)),
aes(x = Year + 0.1, label = Prov),
size = 5, hjust = 0) +
scale_color_brewer(palette = "RdBu") +
theme_void() +
theme(legend.position = "none")
p |> ggplotly(tooltip = "text")
runApp('~/Code/upv/vis/proy')
plot(iris)
setwd(".")
list.of.packages <- c("sf", "plotly", "tidyverse", "rnaturalearth", "rnaturalearthhires", "readr", "crosstalk", "stringdist", "mapSpain", "viridis", "shiny", "ggbump")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages, require, character.only=TRUE)
ocup <- read_csv("data/ocupacion.csv")
ocup <- read_csv("data/ocupacion.csv")
ocup
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F),
yaxis = list(title = "Viajeros", zeroline = F)
)
# Configuración de la animación
fig <- fig %>% animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
fig <- fig %>% animation_slider(
hide = T
)
fig <- fig %>% animation_button(
x = 1, xanchor = "right", y = 0, yanchor = "bottom"
)
# Mostrar el gráfico
fig
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F),
yaxis = list(title = "Viajeros", zeroline = F)
)
# Configuración de la animación
fig <- fig %>% animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
fig <- fig %>% animation_slider(
hide = T
)
fig <- fig %>% animation_button(
x = 1, xanchor = "right", y = 0, yanchor = "bottom"
)
# Mostrar el gráfico
fig
suplot(fig,fig) |>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F),
yaxis = list(title = "Viajeros", zeroline = F)
)
# Configuración de la animación
#fig <- fig %>% animation_opts(
#  frame = 50,
#  transition = 0,
#  redraw = FALSE
#)
#fig <- fig %>% animation_slider(
#  hide = T
#)
#fig <- fig %>% animation_button(
#  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
#)
suplot(fig,fig) |>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F),
yaxis = list(title = "Viajeros", zeroline = F)
)
# Configuración de la animación
#fig <- fig %>% animation_opts(
#  frame = 50,
#  transition = 0,
#  redraw = FALSE
#)
#fig <- fig %>% animation_slider(
#  hide = T
#)
#fig <- fig %>% animation_button(
#  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
#)
suplots(fig,fig) |>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F),
yaxis = list(title = "Viajeros", zeroline = F)
)
# Configuración de la animación
#fig <- fig %>% animation_opts(
#  frame = 50,
#  transition = 0,
#  redraw = FALSE
#)
#fig <- fig %>% animation_slider(
#  hide = T
#)
#fig <- fig %>% animation_button(
#  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
#)
subplot(fig,fig) |>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F, range=c(1999, 2020)),
yaxis = list(title = "Viajeros", zeroline = F, range=c(1999,2020))
)
# Configuración de la animación
#fig <- fig %>% animation_opts(
#  frame = 50,
#  transition = 0,
#  redraw = FALSE
#)
#fig <- fig %>% animation_slider(
#  hide = T
#)
#fig <- fig %>% animation_button(
#  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
#)
subplot(fig,fig) |>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F, range=c(1999, 2020)),
yaxis = list(title = "Viajeros", zeroline = F)
)
# Configuración de la animación
#fig <- fig %>% animation_opts(
#  frame = 50,
#  transition = 0,
#  redraw = FALSE
#)
#fig <- fig %>% animation_slider(
#  hide = T
#)
#fig <- fig %>% animation_button(
#  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
#)
subplot(fig,fig) |>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F, range=c(1999, 2020)),
yaxis = list(title = "Viajeros", zeroline = F, range=c(0, 5000000))
)
# Configuración de la animación
#fig <- fig %>% animation_opts(
#  frame = 50,
#  transition = 0,
#  redraw = FALSE
#)
#fig <- fig %>% animation_slider(
#  hide = T
#)
#fig <- fig %>% animation_button(
#  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
#)
subplot(fig,fig) |>
hide_legend()|>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F, range=c(1999, 2020)),
yaxis = list(title = "Viajeros", zeroline = F, range=c(0, 500000))
)
# Configuración de la animación
#fig <- fig %>% animation_opts(
#  frame = 50,
#  transition = 0,
#  redraw = FALSE
#)
#fig <- fig %>% animation_slider(
#  hide = T
#)
#fig <- fig %>% animation_button(
#  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
#)
subplot(fig,fig) |>
hide_legend()|>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
df <- ocup %>%
filter(LUGAR_RESIDENCIA == "Total", PROVINCIA %in% c("Valencia")) %>%
mutate(date = AÑO + (MES - 1) / 12) |>
select(date, VIAJEROS, PROVINCIA)
accumulate_by <- function(dat, var) {
var <- lazyeval::f_eval(var, dat)
lvls <- plotly:::getLevels(var)
dats <- lapply(seq_along(lvls), function(x) {
cbind(dat[var %in% lvls[seq(1, x)], ], frame = lvls[[x]])
})
dplyr::bind_rows(dats)
}
# Acumular datos por la columna 'date'
df <- df %>% accumulate_by(~date)
# Crear el gráfico interactivo
fig <- df %>%
plot_ly(
x = ~date,
y = ~VIAJEROS,
frame = ~frame,
type = 'scatter',
mode = 'lines',
line = list(simplify = F)
)
# Configuración del gráfico
fig <- fig %>% layout(
title = "Evolución de Viajeros en Álava",
xaxis = list(title = "Fecha (Año Decimal)", zeroline = F, range=c(1999, 2024)),
yaxis = list(title = "Viajeros", zeroline = F, range=c(0, 500000))
)
# Configuración de la animación
#fig <- fig %>% animation_opts(
#  frame = 50,
#  transition = 0,
#  redraw = FALSE
#)
#fig <- fig %>% animation_slider(
#  hide = T
#)
#fig <- fig %>% animation_button(
#  x = 1, xanchor = "right", y = 0, yanchor = "bottom"
#)
subplot(fig,fig) |>
hide_legend()|>
animation_opts(
frame = 50,
transition = 0,
redraw = FALSE
)
