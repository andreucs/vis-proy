---
title: "Turismo en España"
format: dashboard
theme: flatly
server: shiny
---

```{r}
#| context: setup

library(plotly)
library(dplyr)
library(tidyr)
library(sf)
library(data.table)

load("data/turismo_receptor.RData")
load("data/pred.RData")
load("data/real.RData")
load("data/hex_prov.RData")
load("data/ocupacion.RData")

ccaa <- read.csv("data/Provincias_y_Comunidades_Autonomas.csv", sep=";")

```

# Mapa 

## sidebar {.sidebar}

```{r}
selectInput("year", 
            "Año", 
            choices = unique(turismo_receptor$AÑO))
```

-------------------------------
**Autores:**

|                             |
|-----------------------------|
| **Andreu Bonet Pavia**      |
| **Anna Gil Moliner**        |
| **Laiqian Ji**              |
| **Ernesto Martínez Gómez**  |            

::: {.callout-note}
## Fuente de Datos
[Segittur API](https://www.dataestur.es/apidata/)
:::
  
## dasboardPanel

### firstRow {height=50%}



```{r}
plotlyOutput("hexmap")
```


```{r}
plotlyOutput("barplot")
```

### secondRow {height=50%}

#### plotContainer {width=55%}

```{r}
#| content: card-sidebar
selectInput("var", 
            "Variable", 
            choices = c("TURISTAS", "ESTANCIA_MEDIA"),
            selected = "ESTANCIA_MEDIA")
```


```{r}
plotlyOutput("violin_plot")
```

# Provincias


## sidebar {.sidebar}

```{r}

exclude_list <- c("Madrid", "Barcelona", "Málaga", "Illes Balears", "Las Palmas")


filtered_choices <- setdiff(unique(turismo_receptor$PROVINCIA_DESTINO), exclude_list)


selectInput("prov_bump", 
            "Añadir provincias:", 
            choices = filtered_choices,
            multiple = T)

selectInput("page3_year",
             "Año",
             choices=c(2019,2020,2021,2022,2023))
```

##
Análisis del turismo extranjero por provincia

```{r}
plotlyOutput("bump_chart")
```


```{r}
plotlyOutput("province_barplot")
```


# Hoteles

Análisis de la ocupación hotelera en España

## row {height=60%}

### containerAnimated {width="50%"}
```{r}
plotlyOutput("animated")
```


### containerLoli {width="50%"}

```{r}
#| content: card-sidebar
selectInput("year_loli", 
            "AÑO", 
            choices = c(2010, 2011, 2012, 2013,
                        2014, 2015, 2016, 2017, 
                        2018, 2019, 2020, 2021,
                        2022, 2023),
            selected = 2010)
```


```{r}
plotlyOutput("lollipop")
```

## Row {height=40%}


### containerArima {width="45%"}

```{r}
plotlyOutput("arimaPlot")

```

### containerBarras {width="55%"}
```{r}
#| padding: 0px

plotlyOutput("linePlot")
```


```{r}
#| context: server

source("server/data_transformations.R")
source("server/hexmap_render.R")
source("server/barplot_click_render.R")
source("server/covid_events_render.R")
source("server/pred_vs_real.R")
source("server/render_violin_plot.R")
source("server/render_bump_chart.R")
source("server/render_barchart_contrib_selected.R")
source("server/render_animated_bubble.R")
source("server/render_lollipop.R")

colores <- list(
  color1 = "#c6ffcf",
  color2 = "#98e2c3",
  color3 = "#6ac2b0",
  color4 = "#449f9f",
  color5 = "#2d7d8c",
  color6 = "#1a5c73",
  color7 = "#103c5c",
  color8 = "#490084",
  color9 = "#88009d"
)
render_hexmap(output, input, turismo_receptor, hex_prov)

render_barplot(output, input, turismo_receptor, hex_prov, color=colores$color4)

covid_events_render(output, ocup)

render_pred_vs_real(output, real, pred)

render_violin_plot(output, input, turismo_receptor, hex_prov)

render_bump_chart(output, input, get_ranking_provinces, create_inverted_ranking, turismo_receptor, colores)

render_barchart_contrib_selected(output, input, turismo_receptor)

render_animated_bubble(output, input, ocup, color_residentes = colores$color5, color_extranjeros = colores$color9)

render_lollipop(output, input, ocup, ccaa)
```

